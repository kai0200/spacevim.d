#=============================================================================
# dark_powered.toml --- dark powered configuration example for SpaceVim
# Copyright (c) 2016-2023 Wang Shidong & Contributors
# Author: Wang Shidong < wsdjeg@outlook.com >
# URL: https://spacevim.org
# License: GPLv3
#=============================================================================

# All SpaceVim option below [option] section
[options]
  # set spacevim theme. by default colorscheme layer is not loaded,
  # if you want to use more colorscheme, please load the colorscheme
  # layer
  # colorscheme = "gruvbox"
  colorscheme = "onedark"
  colorscheme_bg = "dark"
  # Disable guicolors in basic mode, many terminal do not support 24bit
  # true colors
  enable_guicolors = true
  # Disable statusline separator, if you want to use other value, please
  # install nerd fonts
  statusline_separator = "arrow"
  statusline_iseparator = "arrow"
  buffer_index_type = 4
  enable_tabline_filetype_icon = true
  enable_statusline_mode = false

  # user ----
  # 目录显示默认显示在左边
  #filetree_direction = "left"

  # 文件树插件可选值包括：
  # - nerdtree （默认）
  # - vimfiler: 需要编译 vimproc.vim, 在目录 bundle/vimproc.vim 下
  # - defx: 需要 +py3 支持
  # filemanager = "defx"
  # 禁用插件
  #disabled_plugins = [""]


  # 取消项目根目录
  # 0: disable autochdir
  # 1: change to project root automatically
  # 2: change to directory of current file automatically
  project_rooter_automatically = 2
  change_directory_automatically = 2

  #enable_vimfiler_gitstatus = true
  autocomplete_method = "deoplete"
  bootstrap_before = "myspacevim#before"
  bootstrap_after = "myspacevim#after"

  vim_help_language = "cn"
  # SPC x g t 翻译
  # enable_googlesuggest = true

  # options for statusline
  # 设置状态栏上分割符号形状，如果字体安装失败，可以将值设为 "nil" 以禁用分割符号，
  # 分割符包括以下几种 "arrow", "curve", "slant", "fire", "nil"，默认为箭头 "arrow"
  # 设置活动窗口状态栏上的分割符号形状
  statusline_separator = "fire"
  # 设置非活动窗口状态栏上的分割符号形状
  #statusline_inactive_separator = "bar"
  #statusline_inactive_separator = "arrow"


# Enable autocomplete layer
[[layers]]
name = 'autocomplete'
auto_completion_return_key_behavior = "complete"
auto_completion_tab_key_behavior = "smart"

[[layers]]
  name = 'shell'
  default_position = 'top'
  default_height = 30
[[layers]]
  name = "chinese"
[[layers]]
  name = "colorscheme"
[[layers]]
  name = "lang#c"
  clang_executable = "/usr/bin/clang"
  [layer.clang_std]
    c = "c11"
    cpp = "c++1z"
    objc = "c11"
    objcpp = "c++1z"
[[layers]]
  name = "core#statusline"
  # ----------------------------------------------------------
  # python
  # 1. SPC bf 自动格式化 yapf pip install --user yapf
  # 2. 自动删除未使用的import pip install --user autoflake
  # 3. 排序import             pip install --user isort
  # 4. 代码测试覆盖情况统计   pip install --user coverage
  # 5. 快捷键: 'gd' 'SPC l g d'
  # 启动 python 或 ipython 交互进程，快捷键为： SPC l s i
  
  # SPC l s b	发送整个文件内容至 REPL
  # SPC l s l	发送当前行内容至 REPL
  # SPC l s s	发送已选中的内容至 REPL
  # SPC l i r	使用 autoflake 移除未使用的导包
  # SPC l i s	使用 isort 对导包进行排序
  # normal	SPC l c r	coverager report
  # normal	SPC l c s	coverager show
  # normal	SPC l c e	coverager session
  # normal	SPC l c f	coverager refresh
[[layers]]
  name = 'lang#python'
  enable_typeinfo = true # 显示类型,可以注释
  format_on_save = true
  python_file_head = [
        '# -*- coding: utf-8 -*-',
        '# vim: expandtab softtabstop=4 shiftwidth=4',
        '',
        ''
  ]
[[layers]]
  name = "format"
[[layers]]
   name = "debug"

# For defx
[[custom_plugins]]
  name = 'roxma/nvim-yarp'
[[custom_plugins]]
  name = 'roxma/vim-hug-neovim-rpc'
[[custom_plugins]]
  name = 'sei40kr/SpaceVim-onedark'

# markdown 表格和预览 等
[[custom_plugins]]
  name = 'iamcco/markdown-preview.nvim'
[[custom_plugins]]
  name = 'dhruvasagar/vim-table-mode'
  on = 'TableModeToggle'
[[custom_plugins]]
  name = 'godlygeek/tabular'
[[custom_plugins]]
  name = 'plasticboy/vim-markdown'
[[custom_plugins]]
  name = 'Shougo/vimproc.vim'
